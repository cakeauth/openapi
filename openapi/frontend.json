{
  "openapi": "3.0.3",
  "info": {
    "title": "CakeAuth Frontend API",
    "description": "OpenAPI documentation for interacting with CakeAuth Frontend APIs",
    "version": "0.1.0",
    "contact": {
      "name": "CakeAuth team",
      "email": "team@cakeauth.com"
    },
    "license": {
      "name": "MIT",
      "url": "http://github.com/cakeauth/openapi/LICENSE"
    }
  },
  "security": [{ "AccessTokenAuth": [] }],
  "servers": [
    {
      "url": "https://{host}.live.cakeauth.app",
      "description": "Production environment host URL",
      "variables": {
        "host": {
          "description": "Subdomain for your the production environment host",
          "default": "example"
        }
      }
    },
    {
      "url": "https://{host}.test.cakeauth.app",
      "description": "Development environment host URL",
      "variables": {
        "host": {
          "description": "Subdomain for your development environment host",
          "default": "example"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "Me",
      "description": "Use this set of endpoints to interact with **currently authorized** user."
    },
    {
      "name": "OAuth",
      "description": "Set of endpoint for OAuth callback. Read more about OAuth process [here](/docs/concepts/how-it-works/oauth#how-it-works), and learn to set it up [here](/docs/guides/oauth/overview)."
    },
    {
      "name": "Reset Password",
      "description": "Use this set of endpoints for the **unauthenticated/anonymous** password reset process. Learn more about password reset process, [here](/docs/guides/reset-password)."
    },
    {
      "name": "Sessions",
      "description": "A session is is a temporary state that keeps a user authenticated after they authenticate. Use this set of endpoints to manage sessions for users and its identifiers."
    },
    {
      "name": "Settings",
      "description": "Use this set of endpoints to interact with current environment settings. Read more about environment, [here](/docs/concepts/structure#3-environments)."
    },
    {
      "name": "Sign In",
      "description": "Use this set of endpoints for the **unauthenticated/anonymous** signin process. Learn more about authentication process, [here](/docs/concepts/how-it-works/authentication)."
    },
    {
      "name": "Sign Up",
      "description": "Use this set of endpoints for the **unauthenticated/anonymous** registration process. Learn more about authentication process, [here](/docs/concepts/how-it-works/authentication)."
    },
    {
      "name": "General",
      "description": "General API endpoints"
    }
  ],
  "paths": {
    "/ping": {
      "get": {
        "tags": ["General"],
        "security": [{ "NoAuth": [] }],
        "summary": "Ping-pong",
        "description": "Ping your environment instance",
        "operationId": "getPing",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "text/plain"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pong response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "pong"
              }
            }
          },
          "500": { "$ref": "#/components/responses/ErrorResponse" }
        }
      }
    },
    "/.well-known/jwks.json": {
      "get": {
        "tags": ["General"],
        "security": [{ "NoAuth": [] }],
        "summary": "Get JWKS Keys",
        "description": "Retrieve list of dedicated JWKS keys for current environment. Learn more about JWKS keys, [here](/docs/concepts/signature).",
        "operationId": "getJWKS",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return  list of JWKS keys",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJWKSResponseItem"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestErrorResponse" },
          "500": { "$ref": "#/components/responses/ErrorResponse" }
        }
      }
    },
    "/v1/me": {
      "get": {
        "tags": ["Me"],
        "summary": "Get Current User Details",
        "description": "Retrieve a detailed data for current authorized users",
        "operationId": "getMe",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "in": "header",
            "name": "x-cakeauth-public-key",
            "schema": {
              "type": "string",
              "format": "public_key",
              "example": "pub_test_c3ViZG9tYWluLmV4YW1wbGUuY29t"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A detailed user's data",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/ApiResponseWrapper" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/GetMeResponseItem"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestErrorResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedErrorResponse" },
          "500": { "$ref": "#/components/responses/ErrorResponse" }
        }
      }
    },
    "/v1/me/reset_password": {
      "post": {
        "tags": ["Me"],
        "description": "Reset password for current authenticated users.",
        "summary": "Reset Current User's Password",
        "operationId": "postMeResetPassword",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "in": "header",
            "name": "x-cakeauth-public-key",
            "schema": {
              "type": "string",
              "format": "public_key",
              "example": "pub_test_c3ViZG9tYWluLmV4YW1wbGUuY29t"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostMeResetPasswordBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/ApiResponseWrapper" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PostMeResetPasswordResponseItem"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestErrorResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedErrorResponse" },
          "500": { "$ref": "#/components/responses/ErrorResponse" }
        }
      }
    },
    "/v1/oauth/callback": {
      "get": {
        "tags": ["OAuth"],
        "summary": "OAuth Callback",
        "description": "Callback endpoints for OAuth process. This endpoint exchange code from AOuth providers with access & session token. Read more about OAuth process, [here](/docs/concepts/how-it-works/oauth).",
        "operationId": "getClientsOAuthCallback",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "text/plain"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "in": "header",
            "name": "x-cakeauth-public-key",
            "schema": {
              "type": "string",
              "format": "public_key",
              "example": "pub_test_c3ViZG9tYWluLmV4YW1wbGUuY29t"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "code",
            "schema": {
              "type": "string",
              "format": "oauth_callback_code",
              "example": "123123123"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "state",
            "schema": {
              "type": "string",
              "format": "OAuthState",
              "description": "[Encoded form](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI) of [`OAuthState` type](/sdk/types#oauthstate)."
            },
            "required": true
          }
        ],
        "responses": {
          "301": {
            "description": "OAuth callback redirected succesfully",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "example": "https://example.com"
              }
            },
            "content": {
              "text/plain": {
                "schema": {}
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestErrorResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedErrorResponse" },
          "500": { "$ref": "#/components/responses/ErrorResponse" }
        }
      }
    },
    "/v1/reset_password/attempts": {
      "post": {
        "tags": ["Reset Password"],
        "security": [{ "NoAuth": [] }],
        "description": "Create a reset password request for **authenticated/anonymous** users. Learn more about password reset attempt process, [here](/docs/guides/reset-password#anonymousunauthenticated)",
        "summary": "Create a Reset Password Attempt",
        "operationId": "postMeResetPassword",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "in": "header",
            "name": "x-cakeauth-public-key",
            "schema": {
              "type": "string",
              "format": "public_key",
              "example": "pub_test_c3ViZG9tYWluLmV4YW1wbGUuY29t"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostAttemptResetPasswordBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset attempt created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/ApiResponseWrapper" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PostAttemptResetPasswordResponseItem"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestErrorResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedErrorResponse" },
          "500": { "$ref": "#/components/responses/ErrorResponse" }
        }
      }
    },
    "/v1/reset_password/attempts/{attempt_id}/verify": {
      "post": {
        "tags": ["Reset Password"],
        "security": [{ "NoAuth": [] }],
        "description": "Verify a reset password request (by **authenticated/anonymous** users). Learn more about password reset attempt process, [here](/docs/guides/reset-password#anonymousunauthenticated)",
        "summary": "Verify a Reset Password Attempt",
        "operationId": "postVerifyResetPasswordAttempt",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "in": "path",
            "name": "attempt_id",
            "schema": {
              "type": "string",
              "format": "id",
              "example": "atm_p2n21pe9filh8v5o98nja9j5zdtrkdfr"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-cakeauth-public-key",
            "schema": {
              "type": "string",
              "format": "public_key",
              "example": "pub_test_c3ViZG9tYWluLmV4YW1wbGUuY29t"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostVerifyResetPasswordAttemptBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password resetted",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/ApiResponseWrapper" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PostVerifyResetPasswordAttemptResponseItem"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestErrorResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedErrorResponse" },
          "500": { "$ref": "#/components/responses/ErrorResponse" }
        }
      }
    },
    "/v1/sessions": {
      "get": {
        "tags": ["Sessions"],
        "summary": "List Sessions",
        "description": "Retrieve a paginated list of sessions for currently authanticated user",
        "operationId": "getSessions",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page",
            "example": 1,
            "required": false,
            "schema": {
              "type": "number",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Pagination data size",
            "example": 10,
            "required": false,
            "schema": {
              "type": "number",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Comma-separated filter. Accepts the [session's `status` types](#/reference/model/accessslientUserssessionsstatus)",
            "example": "active,revoked",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "x-cakeauth-public-key",
            "schema": {
              "type": "string",
              "format": "public_key",
              "example": "pub_test_c3ViZG9tYWluLmV4YW1wbGUuY29t"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A list of sessions",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/ApiResponseWrapper" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/GetSessionsResponseItem"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestErrorResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedErrorResponse" },
          "500": { "$ref": "#/components/responses/ErrorResponse" }
        }
      }
    },
    "/v1/sessions/details": {
      "get": {
        "tags": ["Sessions"],
        "summary": "Get Current Session Details",
        "description": "Retrieve details about currently active session",
        "operationId": "getSessionDetails",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "in": "header",
            "name": "x-cakeauth-public-key",
            "schema": {
              "type": "string",
              "format": "public_key",
              "example": "pub_test_c3ViZG9tYWluLmV4YW1wbGUuY29t"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Details of current session",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/ApiResponseWrapper" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/GetSessionDetailsResponseItem"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestErrorResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedErrorResponse" },
          "500": { "$ref": "#/components/responses/ErrorResponse" }
        }
      }
    },
    "/v1/sessions/handshake/{handshake_token}": {
      "get": {
        "tags": ["Sessions"],
        "summary": "Handshake Token Exchange",
        "description": "Exchange a handshake token from [OAuth process](/docs/concepts/how-it-works/oauth) with [access token and session token](/docs/concepts/how-it-works/token-refresh#access-token).",
        "operationId": "getHandshakeSession",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "in": "path",
            "name": "handshake_token",
            "schema": {
              "type": "string",
              "format": "id",
              "example": "tok_p2n21pe9filh8v5o98nja9j5zdtrkdfr"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "x-cakeauth-public-key",
            "schema": {
              "type": "string",
              "format": "public_key",
              "example": "pub_test_c3ViZG9tYWluLmV4YW1wbGUuY29t"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Details of current session",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/ApiResponseWrapper" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/GetHandshakeSessionResponseItem"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestErrorResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedErrorResponse" },
          "500": { "$ref": "#/components/responses/ErrorResponse" }
        }
      }
    },
    "/v1/sessions/tokens": {
      "post": {
        "tags": ["Sessions"],
        "description": "Refresh access token for currently active session. Learn more about sessions refresh mechanism, [here](/docs/concepts/how-it-works/token-refresh).",
        "summary": "Refresh Current Access Token",
        "operationId": "postRefreshSessionToken",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "in": "header",
            "name": "x-cakeauth-public-key",
            "schema": {
              "type": "string",
              "format": "public_key",
              "example": "pub_test_c3ViZG9tYWluLmV4YW1wbGUuY29t"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EmptyObject" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/ApiResponseWrapper" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PostRefreshAccessTokenResponseItem"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestErrorResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedErrorResponse" },
          "500": { "$ref": "#/components/responses/ErrorResponse" }
        }
      }
    },
    "/v1/sessions/revoke": {
      "post": {
        "tags": ["Sessions"],
        "description": "Revoke currently active session. The session's `status` will be changed to `revoked` and session is not valid and cannot be refreshed and/or used anymore.",
        "summary": "Revoke Current Session",
        "operationId": "postRevokeSession",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "in": "header",
            "name": "x-cakeauth-public-key",
            "schema": {
              "type": "string",
              "format": "public_key",
              "example": "pub_test_c3ViZG9tYWluLmV4YW1wbGUuY29t"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EmptyObject" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Session's revoked",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/ApiResponseWrapper" },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PostRevokeSessionResponseItem"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestErrorResponse" },
          "401": { "$ref": "#/components/responses/UnauthorizedErrorResponse" },
          "500": { "$ref": "#/components/responses/ErrorResponse" }
        }
      }
    },
    "/v1/settings": {
      "get": {}
    },
    "/v1/signin/strategies": {
      "post": {}
    },
    "/v1/signin/attempts": {
      "post": {}
    },
    "/v1/signin/attempts/{attempt_id}/verify": {
      "post": {}
    },
    "/v1/signup/attempts": {
      "post": {}
    },
    "/v1/signup/attempts/{attempt_id}/verify": {
      "post": {}
    }
  },
  "components": {
    "schemas": {
      "Status": { "type": "number", "example": 201 },
      "Metadata": {
        "type": "object",
        "required": ["timestamp", "request_id"],
        "properties": {
          "timestamp": { "type": "number", "example": 1707580800000 },
          "request_id": {
            "type": "string",
            "format": "uuid",
            "example": "req_a9d35175ea94b9367aa18237ca518d99"
          },
          "page": { "type": "number", "nullable": true },
          "page_size": { "type": "number", "nullable": true },
          "total": { "type": "number", "nullable": true }
        }
      },
      "Error": {
        "type": "object",
        "nullable": true,
        "properties": {
          "url": {
            "type": "string",
            "example": "https://docs.cakeauth.com/docs/references/errors#not_found"
          },
          "code": { "type": "string", "example": "not_found" },
          "message": { "type": "string", "example": "Resources not found" }
        }
      },
      "ApiResponseWrapper": {
        "type": "object",
        "required": ["status", "metadata", "error", "data"],
        "properties": {
          "status": { "$ref": "#/components/schemas/Status" },
          "metadata": { "$ref": "#/components/schemas/Metadata" },
          "error": { "type": "null" },
          "data": { "type": "object", "nullable": true }
        }
      },
      "SessionActivityMetadata": {
        "type": "object",
        "properties": {
          "is_mobile": {
            "type": "boolean",
            "nullable": true
          },
          "user_agent": {
            "type": "string",
            "nullable": true
          },
          "browser_name": {
            "type": "string",
            "nullable": true
          },
          "browser_version": {
            "type": "string",
            "nullable": true
          },
          "device_type": {
            "type": "string",
            "nullable": true
          },
          "ip": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EmptyObject": {
        "type": "object",
        "properties": {}
      },
      "CommonTokenResponseItem": {
        "type": "object",
        "required": ["name", "value", "expires_at", "domain"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the [cookie](/docs/concepts/how-it-works/cookies#how-cakeauth-uses-cookies).",
            "example": "__Secure-session.ses_a9d35175ea94b9367aa18237ca518d99"
          },
          "value": {
            "type": "string",
            "description": "[JWT Token](/docs/concepts/how-it-works/token-refresh#token-format)",
            "example": "xxx.yyy.zzz"
          },
          "expires_at": {
            "type": "integer",
            "description": "UNIX Timestamp of date expired",
            "format": "unixtime",
            "example": 1739201710547
          },
          "domain": {
            "type": "string",
            "description": "Target domain this tokens issued to",
            "example": "https://example.com"
          }
        }
      },
      "SessionActivityLogItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "session_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "user_id": {
            "type": "string",
            "nullable": true
          },
          "member_id": {
            "type": "string",
            "nullable": true
          },
          "identifier_id": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/SessionActivityMetadata",
            "nullable": true
          }
        },
        "required": ["id", "session_id", "type"]
      },
      "TenantOrganizationStatus": {
        "type": "string",
        "enum": ["active", "inactive"]
      },
      "TenantMembersProvider": {
        "type": "string",
        "enum": ["github", "google", "email"]
      },
      "TenantMembersStatus": {
        "type": "string",
        "enum": ["active", "inactive", "banned", "pending"]
      },
      "AccessClientUsersAttemptsType": {
        "type": "string",
        "enum": ["signin", "signup", "password_reset", "handshake"]
      },
      "AccessClientUsersAttemptsStatus": {
        "type": "string",
        "enum": ["active", "used", "revoked"]
      },
      "AccessTenantMembersAttemptsType": {
        "type": "string",
        "enum": ["password_reset", "signup"]
      },
      "AccessTenantMembersAttemptsStatus": {
        "type": "string",
        "enum": ["active", "used", "revoked"]
      },
      "TenantProjectsStatus": {
        "type": "string",
        "enum": ["active", "inactive"]
      },
      "TenantKeysType": {
        "type": "string",
        "enum": ["public", "private"]
      },
      "AccessTenantMembersSessionsStatus": {
        "type": "string",
        "enum": ["active", "expired", "replaced", "revoked"]
      },
      "ClientUsersStatus": {
        "type": "string",
        "enum": ["active", "banned", "invited"]
      },
      "ClientUsersIdentifiersProvider": {
        "type": "string",
        "enum": [
          "email",
          "username",
          "phone",
          "google",
          "facebook",
          "apple",
          "github",
          "microsoft",
          "linkedin",
          "dropbox",
          "twitch",
          "discord",
          "tiktok",
          "gitlab",
          "slack"
        ]
      },
      "ClientUsersIdentifierContactInformationsType": {
        "type": "string",
        "enum": ["email", "phone"]
      },
      "AccessClientUsersSessionsStatus": {
        "type": "string",
        "enum": ["active", "expired", "replaced", "revoked", "timeout"]
      },
      "SettingsTenantEnvironmentsTimeUnit": {
        "type": "string",
        "enum": ["day", "hour", "minute", "second"]
      },
      "SettingsTenantEnvironmentsCaptchaType": {
        "type": "string",
        "enum": ["turnstile", "recaptcha"]
      },
      "SettingsTenantContactInformationsProvider": {
        "type": "string",
        "enum": ["email", "phone", "username", "provider_id"]
      },
      "SettingsTenantAuthenticationStrategiesProvider": {
        "type": "string",
        "enum": [
          "email",
          "phone_sms",
          "phone_call",
          "phone_whatsapp",
          "username",
          "username_email",
          "username_sms",
          "username_whatsapp"
        ]
      },
      "SettingsTenantAuthenticationStrategiesMethod": {
        "type": "string",
        "enum": ["password", "code", "magic_link"]
      },
      "SettingsTenantIdentifiersProvider": {
        "type": "string",
        "enum": [
          "email",
          "username",
          "phone",
          "google",
          "facebook",
          "apple",
          "github",
          "microsoft",
          "linkedin",
          "dropbox",
          "twitch",
          "discord",
          "tiktok",
          "gitlab",
          "slack"
        ]
      },
      "GetJWKSResponseItem": {
        "type": "array",
        "description": "Array of JWKS keys",
        "items": {
          "type": "object",
          "required": ["kid", "alg", "kty", "n", "e", "use"],
          "properties": {
            "kid": {
              "type": "string",
              "description": "Key ID",
              "example": "key_qziojlr8u7rczho7xqkr2gdvygnj1lw5"
            },
            "alg": {
              "type": "string",
              "description": "Algorithm",
              "example": "RS256"
            },
            "kty": {
              "type": "string",
              "description": "Key Type",
              "example": "RSA"
            },
            "n": {
              "type": "string",
              "description": "RSA Modulus",
              "example": "<public-key-modulus>"
            },
            "e": {
              "type": "string",
              "description": "RSA Exponent",
              "example": "AQAB"
            },
            "use": {
              "type": "string",
              "description": "Key Usage",
              "example": "sig",
              "enum": ["sig", "enc"]
            },
            "ext": {
              "type": "boolean",
              "description": "Indicates whether the key is extractable",
              "example": true
            }
          }
        }
      },
      "GetMeResponseItem": {},
      "PostMeResetPasswordBody": {},
      "PostMeResetPasswordResponseItem": {},
      "PostAttemptResetPasswordBody": {},
      "PostAttemptResetPasswordResponseItem": {},
      "PostVerifyResetPasswordAttemptBody": {},
      "PostVerifyResetPasswordAttemptResponseItem": {},
      "GetSessionsResponseItem": {},
      "GetSessionDetailsResponseItem": {},
      "GetHandshakeSessionResponseItem": {},
      "PostRefreshAccessTokenResponseItem": {},
      "PostRevokeSessionResponseItem": {}
    },
    "responses": {
      "BadRequestErrorResponse": {
        "description": "Bad request error response",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                { "$ref": "#/components/schemas/ApiResponseWrapper" },
                {
                  "type": "object",
                  "properties": {
                    "data": { "type": "null" },
                    "status": { "example": 400 },
                    "error": {
                      "example": {
                        "url": "https://docs.cakeauth.com/docs/references/errors#bad_request",
                        "code": "bad_request",
                        "message": "Invalid payload"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "UnauthorizedErrorResponse": {
        "description": "Unauthorized response",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                { "$ref": "#/components/schemas/ApiResponseWrapper" },
                {
                  "type": "object",
                  "properties": {
                    "data": { "type": "null" },
                    "status": { "example": 401 },
                    "error": {
                      "example": {
                        "url": "https://docs.cakeauth.com/docs/references/errors#unauthorized",
                        "code": "unauthorized",
                        "message": "Unauthorized"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "ErrorResponse": {
        "description": "Error response",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                { "$ref": "#/components/schemas/ApiResponseWrapper" },
                {
                  "type": "object",
                  "properties": {
                    "data": { "type": "null" },
                    "status": { "example": 500 },
                    "error": {
                      "example": {
                        "url": "https://docs.cakeauth.com/docs/references/errors#internal_server_error",
                        "code": "internal_server_error",
                        "message": "Internal server error"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "AccessTokenAuth": {
        "type": "http",
        "description": "Access token",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
